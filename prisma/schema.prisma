// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String   @id @default(uuid())
  refresh_token String?
  email         String   @unique
  verified_email Boolean
  name          String?
  given_name    String?
  family_name   String?
  picture       String?
  hd            String?
  isSync        Boolean  @default(false)
  groups        UserGroup[]
  messages      Message[]
}

model Group {
  id          String      @id @default(uuid())
  name        String
  createTime  DateTime     @default(now())
  description String?
  numMember   Int?
  events      Event[]
  users       UserGroup[]
}

model UserGroup {
  user_id  String
  group_id String
  user     Users  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  group    Group  @relation(fields: [group_id], references: [id], onDelete: Cascade)

  @@id([user_id, group_id])
}

model Event {
  id              String   @id @default(uuid())
  name            String
  description     String?
  startTime       DateTime?
  endTime         DateTime?
  isRecurring     Boolean?
  isComplete      Boolean?
  type            String?
  reminderTime    Int?
  recurrentPattern String?
  priority        Int?
  group_id        String?
  group           Group?   @relation(fields: [group_id], references: [id], onDelete: Cascade)
}

model Message {
  id         String   @id @default(uuid())
  userId     String?
  createTime DateTime @default(now())
  isBot      Boolean
  text       String?
  user       Users?   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
