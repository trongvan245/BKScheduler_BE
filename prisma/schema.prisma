generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String    @id @db.VarChar(255)
  summary     String    @db.VarChar(255)
  description String?
  isComplete  Boolean?
  type        String?   @db.VarChar(50)
  startTime   DateTime?
  endTime     DateTime?
  createTime  DateTime  @default(now())
  priority    Int?
  group_id    String?   @db.Uuid
  Group       Group?    @relation(fields: [group_id], references: [id], onDelete: Cascade)
}

model Group {
  id          String      @id @db.Uuid
  name        String      @db.VarChar(255)
  createTime  DateTime    @default(now())
  description String?
  numMember   Int?
  Event       Event[]
  UserGroup   UserGroup[]
}

model Message {
  id         String   @id @db.Uuid
  userId     String?  @db.Uuid
  createTime DateTime @default(now())
  text       String?
  response   String?
  textbot    String?
  User       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String      @id @db.Uuid
  refresh_token  String?     @db.VarChar(255)
  email          String      @unique @db.VarChar(255)
  verified_email Boolean
  name           String?     @db.VarChar(255)
  given_name     String?     @db.VarChar(255)
  family_name    String?     @db.VarChar(255)
  picture        String?     @db.VarChar(255)
  hd             String?     @db.VarChar(255)
  isSync         Boolean     @default(false)
  Message        Message[]
  UserGroup      UserGroup[]
}

model UserGroup {
  user_id  String @db.Uuid
  group_id String @db.Uuid
  Group    Group  @relation(fields: [group_id], references: [id], onDelete: Cascade)
  User     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([user_id, group_id])
}
